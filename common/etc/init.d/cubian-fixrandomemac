#! /bin/bash

### BEGIN INIT INFO
# Provides:          cubian-fixrandomemac
# Required-Start:    $local_fs
# Required-Stop:
# Should-Start:   
# X-Start-Before:    $networking
# Default-Start:     S    
# Default-Stop:
# Short-Description: Fix random emac on cubieboard
# Description:       Always respect the emac which is setted by script.bin
#                    Otherwise generate a mac address to be used every time
#
#                    Refs:
#                    http://linux-sunxi.org/EMAC
#                    This will cause some problems, see
#                    https://github.com/cubieplayer/Cubian/issues/63
#                    https://github.com/cubieplayer/Cubian/issues/47
#
### END INIT INFO

N=/etc/init.d/cubian-fixrandomemac

set -e

SCRIPT_BIN="/boot/script.bin"
CUBIAN_EMAC="/root/.cubian-emac"
IF="eth0"
HAS_SUNXI_EMAC=
EMAC=
FEX_CONTENT=
BIN2FEX="/usr/bin/bin2fex"
FEX2BIN="/usr/bin/fex2bin"

#if [ -f $SCRIPT_BIN ];then
#	FEX_CONTENT=$($BIN2FEX $SCRIPT_BIN 2>/dev/null)
#	if grep -qi "^\s*MAC\s*=" <<< "$FEX_CONTENT";then
#		HAS_SUNXI_EMAC=true
#	else
#		HAS_SUNXI_EMAC=false
#	fi
#else
#	echo "$N warning: script.bin not found"
#	HAS_SUNXI_EMAC=false
#fi

genEmac(){
if [ ! -f $CUBIAN_EMAC ];then
randemac="c0:b0:$(openssl rand -hex 4 | sed 's/\(..\)/\1:/g; s/.$//')"
echo "$N generate mac address $emac to $CUBIAN_EMAC"
cat > $CUBIAN_EMAC <<END
$randemac
END
EMAC="$randemac"
else
EMAC=$(cat $CUBIAN_EMAC)
fi
}

case "$1" in
  start)
	    if ! $HAS_SUNXI_EMAC;then
			genEmac
			set +e
			echo "$N set mac address $EMAC on ${IF}"
			output=$(/sbin/ifconfig $IF hw ether $EMAC 2>&1)
			if [ "$?" != "0" ];then
				echo $output
				if grep -qi "Device or resource busy" <<< "$output";then
					echo "$N warning: $IF is up at the moment, might be a nfs booting"
				else
					echo "$N error: invalid mac address format? check file $CUBIAN_EMAC"
					exit 2
				fi
			fi
			set -e
			#if [ -f $SCRIPT_BIN ];then
			#	echo "$N save emac setting to script.bin"
			#	echo -e "$FEX_CONTENT\n\n[dynamic]\nMAC=\"$EMAC\"" | $FEX2BIN > $SCRIPT_BIN
			#fi
		fi
        ;;
  *)
        echo "Usage: $N {start}" >&2
        exit 1
        ;;
esac

exit 0
